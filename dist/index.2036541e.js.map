{"mappings":"AACA,MAAMA,UAAYC,SAASC,cAAa,cAClCC,mBAAqBH,UAAUI,iBAAgB,oBAC/CC,YAAcJ,SAASC,cAAa,gBACpCI,WAAaL,SAASC,cAAa,aACnCK,cAAgBN,SAASC,cAAa,oBACtCM,aAAeP,SAASC,cAAa,qBACrCO,SAAWR,SAASC,cAAa,qBAGjCQ,YAAW,GAGXC,WAAaV,SAASC,cAAa,gBACnCU,aAAeX,SAASC,cAAa,kBAErCW,IAAG,CAELC,KAAI,WAEAC,MAAMC,YAENH,IAAIF,aAEJH,aAAaS,iBAAgB,QAAUJ,IAAIK,eAG/CP,WAAU,eACD,IAAIQ,EAAI,EAAGA,EAAIhB,mBAAmBiB,OAAQD,IAE3CT,YAAYW,KAAKlB,mBAAmBgB,GAAGG,UAAU,IAEjDnB,mBAAmBgB,GAAGF,iBAAgB,QAAUJ,IAAIU,aAI5DA,WAAU,SAAYC,GAElBC,aAAeD,EAAYE,KAAK,GAAGJ,UAAU,GAAKE,EAAYE,KAAK,GAAGJ,UAAU,GAAKE,EAAYE,KAAK,GAAGJ,UAAU,GAGnHtB,UAAU2B,MAAMC,KAAI,QACpB5B,UAAU2B,MAAME,SAAW,EAC3B7B,UAAU2B,MAAMG,WAAU,uBAC1BzB,YAAYsB,MAAMC,KAAI,IACtBvB,YAAYsB,MAAMI,QAAU,EAC5B1B,YAAYsB,MAAMG,WAAU,uBAG5BnB,WAAWW,UAAUU,IAAIP,cAGzBZ,IAAIoB,kBAGRA,eAAc,WAEV,IAAIC,EAAexB,YAAYyB,KAAKC,MAAMD,KAAKE,SAAW3B,YAAYU,SAEtEkB,YAAU,WACN1B,aAAaU,UAAUU,IAAIE,GAC3BK,MAAMC,cACP,OAGPtB,aAAY,WAERlB,UAAU2B,MAAMC,KAAO,EACvB5B,UAAU2B,MAAMI,QAAU,EAC1B/B,UAAU2B,MAAMG,WAAU,uBAG1BzB,YAAYsB,MAAMC,KAAI,QACtBvB,YAAYsB,MAAMI,QAAU,EAC5B1B,YAAYsB,MAAMG,WAAU,uBAG5BxB,WAAWqB,MAAMc,QAAO,OAGxB9B,WAAWW,UAAUoB,OAAM,QAAQ,WAAY,OAAQ,OACvD9B,aAAaU,UAAUoB,OAAM,QAAQ,WAAY,OAAQ,SAKjEzC,SAASgB,iBAAgB,mBAAqBJ,IAAIC","sources":["assets/scripts/app.js"],"sourcesContent":["// Game elements\r\nconst gameboard = document.querySelector(\".gameboard\");\r\nconst gameboardItemsList = gameboard.querySelectorAll(\".gameboard__item\");\r\nconst resultBoard = document.querySelector(\".game-result\");\r\nconst infosBlock = document.querySelector(\".gr-infos\");\r\nconst resultMessage = document.querySelector(\".gr-infos__title\");\r\nconst replayButton = document.querySelector(\".gr-infos__button\");\r\nconst scoreBox = document.querySelector(\".score-box__total\");\r\n\r\n// Retrieves class names of choices items\r\nconst choicesList = [];\r\n\r\n// Retrieves tokens place where choices are expected\r\nconst playerPick = document.querySelector(\"#player-pick\");\r\nconst computerPick = document.querySelector(\"#computer-pick\");\r\n\r\nconst app = {\r\n    //* Game initialization\r\n    init: function () {\r\n        // Upload saving player score function\r\n        score.scoreInit();\r\n        // Launch game function\r\n        app.playerPick();\r\n        // Defines event on replay button\r\n        replayButton.addEventListener(\"click\", app.relaunchGame);\r\n    },\r\n    //* Permit to launch a new game when player click on a game token\r\n    playerPick: function () {\r\n        for (let i = 0; i < gameboardItemsList.length; i++) {\r\n            // Add each choice on choiceList array\r\n            choicesList.push(gameboardItemsList[i].classList[1]);\r\n            // Add an listener on each game token\r\n            gameboardItemsList[i].addEventListener(\"click\", app.launchGame);\r\n        }\r\n    },\r\n    //* Launch a new game\r\n    launchGame: function (clickedItem) {\r\n        // Retrieves class from player's choice pick\r\n        playerChoice = clickedItem.path[1].classList[1] ? clickedItem.path[1].classList[1] : clickedItem.path[0].classList[1] ;\r\n\r\n        // Change gameboard by result board\r\n        gameboard.style.left = \"-200%\";\r\n        gameboard.style.opactity = 0;\r\n        gameboard.style.transition = \"all 0.6s ease-in-out\";\r\n        resultBoard.style.left = \"0\";\r\n        resultBoard.style.opacity = 1;\r\n        resultBoard.style.transition = \"all 0.6s ease-in-out\";\r\n\r\n        // Add player's choice on result board\r\n        playerPick.classList.add(playerChoice);\r\n\r\n        // Call computer choice\r\n        app.computerChoice();\r\n    },\r\n    //* Computer's choice\r\n    computerChoice: function () {\r\n        // Defines how computer make a choice\r\n        let computerSaid = choicesList[Math.floor(Math.random() * choicesList.length)];\r\n        // Defines a timeout to async computer's choice\r\n        setTimeout(function(){\r\n            computerPick.classList.add(computerSaid),\r\n            rules.gameRules();\r\n        }, 1200);\r\n    },\r\n    //* Reboot game\r\n    relaunchGame: function () {\r\n        // Gameboard init\r\n        gameboard.style.left = 0;\r\n        gameboard.style.opacity = 1;\r\n        gameboard.style.transition = \"all 0.6s ease-in-out\";\r\n\r\n        // Result board init\r\n        resultBoard.style.left = \"-200%\";\r\n        resultBoard.style.opacity = 0;\r\n        resultBoard.style.transition = \"all 0.6s ease-in-out\";\r\n\r\n        // Result message init\r\n        infosBlock.style.display = \"none\";\r\n\r\n        // Remove class on result board tokens\r\n        playerPick.classList.remove(\"paper\", \"scissors\", \"rock\", \"win\");\r\n        computerPick.classList.remove(\"paper\", \"scissors\", \"rock\", \"win\");\r\n    }\r\n}\r\n\r\n// Calling app.init to the start of the app\r\ndocument.addEventListener('DOMContentLoaded', app.init);"],"names":["gameboard","document","querySelector","gameboardItemsList","querySelectorAll","resultBoard","infosBlock","resultMessage","replayButton","scoreBox","choicesList","playerPick","computerPick","app","init","score","scoreInit","addEventListener","relaunchGame","i","length","push","classList","launchGame","clickedItem","playerChoice","path","style","left","opactity","transition","opacity","add","computerChoice","computerSaid","Math","floor","random","setTimeout","rules","gameRules","display","remove"],"version":3,"file":"index.2036541e.js.map"}