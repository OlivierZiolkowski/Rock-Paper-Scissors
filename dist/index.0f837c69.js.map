{"mappings":"AAGA,MAAMA,UAAaC,SAASC,cAAa,cACnCC,mBAAqBH,UAAUI,iBAAgB,oBAC/CC,YAAcJ,SAASC,cAAa,gBACpCI,WAAaL,SAASC,cAAa,aACnCK,cAAgBN,SAASC,cAAa,oBACtCM,aAAeP,SAASC,cAAa,qBAGrCO,YAAW,GAGXC,WAAaT,SAASC,cAAa,gBACnCS,aAAeV,SAASC,cAAa,kBAErCU,IAAG,CAELC,KAAI,WACAD,IAAIF,aACJF,aAAaM,iBAAgB,QAAUF,IAAIG,eAE/CL,WAAU,eAED,IAAIM,EAAI,EAAGA,EAAIb,mBAAmBc,OAAQD,IAC3CP,YAAYS,KAAKf,mBAAmBa,GAAGG,UAAU,IACjDhB,mBAAmBa,GAAGF,iBAAgB,QAAUF,IAAIQ,aAG5DA,WAAU,SAAWC,GACjBC,aAAeD,EAAYE,KAAK,GAAGJ,UAAU,GAC7CnB,UAAUwB,MAAMC,KAAI,QACpBzB,UAAUwB,MAAME,QAAO,OACvB1B,UAAUwB,MAAMG,WAAU,uBAE1BtB,YAAYmB,MAAMI,MAAK,IACvBvB,YAAYmB,MAAME,QAAO,OACzBrB,YAAYmB,MAAMG,WAAU,uBAE5BjB,WAAWS,UAAUU,IAAIP,cAEzBV,IAAIkB,kBAGRA,eAAc,WACVC,QAAQC,IAAIvB,aACZ,IAAIwB,EAAexB,YAAYyB,KAAKC,MAAMD,KAAKE,SAAS3B,YAAYQ,SACpEN,aAAaQ,UAAUU,IAAII,GAC3BrB,IAAIyB,aAERA,UAAS,WACLN,QAAQC,IAAIrB,aAAaQ,UAAU,IACnCY,QAAQC,IAAItB,WAAWS,UAAU,IAGJ,aAAxBR,aAAaQ,UAAU,IAA2C,SAAtBT,WAAWS,UAAU,IACzC,UAAxBR,aAAaQ,UAAU,IAAwC,aAAtBT,WAAWS,UAAU,IACtC,SAAxBR,aAAaQ,UAAU,IAAuC,UAAtBT,WAAWS,UAAU,GAE9DZ,cAAc+B,UAAS,UAIE,aAAxB3B,aAAaQ,UAAU,IAA2C,UAAtBT,WAAWS,UAAU,IACzC,UAAxBR,aAAaQ,UAAU,IAAwC,SAAtBT,WAAWS,UAAU,IACtC,SAAxBR,aAAaQ,UAAU,IAAuC,aAAtBT,WAAWS,UAAU,GAE9DZ,cAAc+B,UAAS,WAIvB/B,cAAc+B,UAAS,OAI3BhC,WAAWkB,MAAME,QAAO,QAE5BX,aAAY,WACRL,WAAWS,UAAUoB,OAAM,QAAQ,WAAY,QAC/C5B,aAAaQ,UAAUoB,OAAM,QAAQ,WAAY,QACjDvC,UAAUwB,MAAMC,KAAO,EACvBzB,UAAUwB,MAAME,QAAO,OACvB1B,UAAUwB,MAAMG,WAAU,uBAE1BtB,YAAYmB,MAAMI,MAAK,QACvBvB,YAAYmB,MAAME,QAAO,OACzBrB,YAAYmB,MAAMG,WAAU,yBAKpC1B,SAASa,iBAAgB,mBAAqBF,IAAIC","sources":["assets/scripts/app.js"],"sourcesContent":["// Calling scripts\r\n\r\n// Game elements\r\nconst gameboard =  document.querySelector(\".gameboard\");\r\nconst gameboardItemsList = gameboard.querySelectorAll(\".gameboard__item\");\r\nconst resultBoard = document.querySelector(\".game-result\");\r\nconst infosBlock = document.querySelector(\".gr-infos\");\r\nconst resultMessage = document.querySelector(\".gr-infos__title\");\r\nconst replayButton = document.querySelector(\".gr-infos__button\");\r\n\r\n// Retrieves class names of choices items\r\nconst choicesList = [];\r\n\r\n// Choices\r\nconst playerPick = document.querySelector(\"#player-pick\");\r\nconst computerPick = document.querySelector(\"#computer-pick\");\r\n\r\nconst app = {\r\n    // Game initialization\r\n    init: function() {\r\n        app.playerPick();\r\n        replayButton.addEventListener(\"click\", app.relaunchGame);\r\n    },\r\n    playerPick: function() {\r\n        // Récupère la liste des items\r\n        for (let i = 0; i < gameboardItemsList.length; i++) {\r\n            choicesList.push(gameboardItemsList[i].classList[1]);\r\n            gameboardItemsList[i].addEventListener(\"click\", app.launchGame);\r\n        }\r\n    },\r\n    launchGame: function(clickedItem) {\r\n        playerChoice = clickedItem.path[1].classList[1];\r\n        gameboard.style.left = \"-100%\";\r\n        gameboard.style.display = \"none\";\r\n        gameboard.style.transition = \"all 0.6s ease-in-out\";\r\n\r\n        resultBoard.style.right = \"0\";\r\n        resultBoard.style.display = \"flex\";\r\n        resultBoard.style.transition = \"all 0.6s ease-in-out\";\r\n\r\n        playerPick.classList.add(playerChoice);\r\n\r\n        app.computerChoice();\r\n\r\n    },\r\n    computerChoice: function() {\r\n        console.log(choicesList);\r\n        let computerSaid = choicesList[Math.floor(Math.random()*choicesList.length)];\r\n        computerPick.classList.add(computerSaid);\r\n        app.gameRules();\r\n    },\r\n    gameRules: function() {\r\n        console.log(computerPick.classList[1]);\r\n        console.log(playerPick.classList[1]);\r\n        // Winning conditions\r\n        if (\r\n            (computerPick.classList[1] === \"scissors\" && playerPick.classList[1] === \"rock\") ||\r\n            (computerPick.classList[1] === \"paper\" && playerPick.classList[1] === \"scissors\") ||\r\n            (computerPick.classList[1] === \"rock\" && playerPick.classList[1] === \"paper\")\r\n        ) {\r\n            resultMessage.innerHTML = \"you win\";\r\n        } \r\n        // Losing conditions\r\n        else if(\r\n            (computerPick.classList[1] === \"scissors\" && playerPick.classList[1] === \"paper\") ||\r\n            (computerPick.classList[1] === \"paper\" && playerPick.classList[1] === \"rock\") ||\r\n            (computerPick.classList[1] === \"rock\" && playerPick.classList[1] === \"scissors\")\r\n        ) {\r\n            resultMessage.innerHTML = \"you lose\";\r\n        }\r\n        // Draw conditions\r\n        else {\r\n            resultMessage.innerHTML = \"draw\";\r\n        }\r\n\r\n        // Infos block\r\n        infosBlock.style.display = \"flex\";\r\n    },\r\n    relaunchGame: function() {\r\n        playerPick.classList.remove(\"paper\", \"scissors\", \"rock\");\r\n        computerPick.classList.remove(\"paper\", \"scissors\", \"rock\");\r\n        gameboard.style.left = 0;\r\n        gameboard.style.display = \"flex\";\r\n        gameboard.style.transition = \"all 0.6s ease-in-out\";\r\n\r\n        resultBoard.style.right = \"-100%\";\r\n        resultBoard.style.display = \"none\";\r\n        resultBoard.style.transition = \"all 0.6s ease-in-out\";\r\n    }\r\n}\r\n\r\n// Calling app.init to the start of the app\r\ndocument.addEventListener('DOMContentLoaded', app.init);"],"names":["gameboard","document","querySelector","gameboardItemsList","querySelectorAll","resultBoard","infosBlock","resultMessage","replayButton","choicesList","playerPick","computerPick","app","init","addEventListener","relaunchGame","i","length","push","classList","launchGame","clickedItem","playerChoice","path","style","left","display","transition","right","add","computerChoice","console","log","computerSaid","Math","floor","random","gameRules","innerHTML","remove"],"version":3,"file":"index.0f837c69.js.map"}